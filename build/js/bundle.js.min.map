{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","console","log","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","Imagen","createElement","src","dataset","ImagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","cerrarImagen","textContent","body","toggle"],"mappings":"AAKA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAGA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,QAGAP,EAAAM,UAAAE,IAAA,WAKAC,QAAAR,SAAAC,cAAA,oBAGA,SAAAQ,YACAT,SAAAU,iBAAA,yBAEAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAEAC,QAAAC,MAEAjB,SAAAC,cAAAa,EAAAI,OAAAC,WAAAC,KAAAC,OACAC,eACA,CACAC,SAAA,iBC/BA,SAAAC,eACA,MAAAC,EAAAzB,SAAAC,cAAA,qBAEA,IAAA,IAAAyB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CACA,MAAAC,EAAA3B,SAAA4B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAEA,MAAAC,EAAAlC,SAAA4B,cAAA,MACAM,EAAAC,YAAAR,GAEAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAnB,GAEA,MAAAsB,EAAAC,SAAAvB,EAAAI,OAAAY,QAAAC,UAGAJ,EAAA3B,SAAA4B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAEA,MAAAE,EAAAtC,SAAA4B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAAjC,UAAAE,IAAA,WAGA+B,EAAAN,QAAA,WACA1B,UAIA,MAAAiC,EAAAvC,SAAA4B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAlC,UAAAE,IAAA,cACA+B,EAAAH,YAAAI,GAGAA,EAAAP,QAAA,WACAM,EAAAhC,SACAmC,EAAApC,UAAAqC,OAAA,eAIA,MAAAD,EAAAzC,SAAAC,cAAA,QACAwC,EAAAN,YAAAG,GACAG,EAAApC,UAAAE,IAAA,cDtDAP,SAAAa,iBAAA,oBAAA,WACAJ,YACAX,oBCFAE,SAAAa,iBAAA,oBAAA,WACAW","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){\r\n    scrollNav(); \r\n    navegacionFija();\r\n})\r\n\r\nfunction navegacionFija() {\r\n\r\n    const barra =  document.querySelector('.header');\r\n\r\n    //Registrar el Intersection Observer\r\n     const observer =  new IntersectionObserver(function(entries){\r\n        if(entries[0].isIntersecting){\r\n            barra.classList.remove('fijo');\r\n        }\r\n        else{\r\n            barra.classList.add('fijo');\r\n        }\r\n     })\r\n\r\n    //Elemento a observar\r\n    observer.observe(document.querySelector('.sobre-festival'));\r\n}\r\n\r\nfunction scrollNav() {\r\n    const enlaces =  document.querySelectorAll('.navegacion-principal');\r\n   \r\n    enlaces.forEach( function(enlace){\r\n        enlace.addEventListener('click', function(e){\r\n            e.preventDefault();\r\n\r\n            console.log();\r\n\r\n            const section =  document.querySelector(e.target.attributes.href.value);\r\n            section.scrollIntoView(\r\n                {\r\n                    behavior: 'smooth'\r\n                }\r\n            );\r\n        })\r\n    });\r\n}","document.addEventListener('DOMContentLoaded', function() { // Esta funcion fue creada para que al cargar la pagina automaticamente llame a la funcion que genera la galeria\r\n    crearGaleria();                                         // llamamos a la Funcion galeria\r\n});\r\n\r\nfunction crearGaleria() {                                   //n Creamos la funcion galeria\r\n    const galeria =  document.querySelector('.galeria-imagenes'); // seleccionamos la clase \r\n\r\n    for(let i = 1; i <= 12 ; i++){                              //Creamos un ciclo para que recorra todas las imagenes guardadas\r\n        const Imagen =  document.createElement('IMG');          // creamos un nuevo elemento de tipo imagen\r\n        Imagen.src = `build/img/thumb/${i}.webp`;               // le asignamos la ruta donde estan guardadas y va ir tomando cada una segun el incremento\r\n        Imagen.dataset.ImagenId = i;                            // creamos unas propiedades html para poder identificar las imagenes que seleccionamos\r\n\r\n        //Anadir la funcion que muestra la imagen\r\n        Imagen.onclick = mostrarImagen;                         // al hacer click mandamos a llamar a la funcion que muestra la imagen\r\n\r\n        const lista =  document.createElement('LI');            // creamos un elemento html de tipo lista\r\n        lista.appendChild(Imagen);                              // mandamos a mostrar cada una de las imagenes recorridas\r\n\r\n        galeria.appendChild(lista);                             // en el contenedor de la clase galeria mandamos a mostrar esa lista creada\r\n    }\r\n}\r\n\r\nfunction mostrarImagen(e) {                                     \r\n\r\n    const id = parseInt(e.target.dataset.ImagenId);             // parseamos o convertimos el id a un numero entero para poder utilizarlo en el llamado de las imagenes grandes\r\n\r\n    //Generar la imagen\r\n    const Imagen = document.createElement('IMG');               // cramos elemento imagen\r\n    Imagen.src = `build/img/grande/${id}.webp`;                 // le damos la ruta de las nuevas imagenes\r\n\r\n    const overlay = document.createElement('DIV');              // creamos un contenedor de la nueva imagen\r\n    overlay.appendChild(Imagen);                                // asignamos la imagen al contenedor \r\n    overlay.classList.add('overlay');                           // le agregamos clase al contenedor para darle sus estilos\r\n\r\n    //Cuando se da click, cerrar la imagen\r\n    overlay.onclick = function() {                              // para quitar la imagen al clikear el contenedor\r\n     remove();\r\n    }        \r\n\r\n    //Boton para cerrar la imagen\r\n    const cerrarImagen =  document.createElement('P');          // creamos elemento parrafo\r\n    cerrarImagen.textContent = 'X';                             // creamos el contenido del parrafo\r\n    cerrarImagen.classList.add('btn-cerrar');                   // le creamos una clase para darle estilos\r\n    overlay.appendChild(cerrarImagen);                          // se lo agregamos al contenedor el el contenido del parrafo\r\n\r\n    //Cuando se presiona, se cierra la imagen\r\n    cerrarImagen.onclick = function() {                         // funcion para que cuando click, quitemos el contenedor de la imagen\r\n        overlay.remove();                                       // quitamos el contenedor\r\n        body.classList.toggle('fijar-body');                    // al body le quito la clase para que de scroll al cerrar la imagen\r\n    }\r\n\r\n    //Mostrar en el html\r\n    const body =  document.querySelector('body');               // seleccionamos el body\r\n    body.appendChild(overlay);                                  // le agregamos el contenedor\r\n    body.classList.add('fijar-body');                           // le creamos la clase para que de scroll\r\n\r\n}"]}